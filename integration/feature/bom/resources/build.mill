package build

import mill._
import mill.scalalib._
import mill.scalalib.publish._

trait TestPublishModule extends PublishModule {
  def pomSettings = PomSettings(
    description = artifactName(),
    organization = "com.lihaoyi.mill-tests",
    url = "https://github.com/com-lihaoyi/mill",
    licenses = Seq(License.`Apache-2.0`),
    versionControl = VersionControl.github("com-lihaoyi", "mill"),
    developers = Nil
  )
  def publishVersion = "0.1.0-SNAPSHOT"
}

object bom extends Module {
  object placeholder extends JavaModule with TestPublishModule {
    def bomDeps = Agg(
      ivy"com.google.cloud:libraries-bom:26.50.0"
    )
    def ivyDeps = Agg(
      ivy"com.google.protobuf:protobuf-java:_"
    )

    object dependee extends JavaModule with TestPublishModule {
      def moduleDeps = Seq(
        placeholder
      )
    }

    object check extends JavaModule {
      def ivyDeps = Agg(
        ivy"com.google.protobuf:protobuf-java:_"
      )
    }
  }

  object versionOverride extends JavaModule with TestPublishModule {
    def bomDeps = Agg(
      ivy"com.google.cloud:libraries-bom:26.50.0"
    )
    def ivyDeps = Agg(
      ivy"com.thesamet.scalapb:scalapbc_2.13:0.9.8"
    )

    object dependee extends JavaModule with TestPublishModule {
      def moduleDeps = Seq(
        versionOverride
      )
    }

    object check extends JavaModule {
      def ivyDeps = Agg(
        ivy"com.thesamet.scalapb:scalapbc_2.13:0.9.8"
      )
    }
  }

  object invalid extends Module {
    object exclude extends JavaModule {
      def bomDeps = Agg(
        ivy"com.google.cloud:libraries-bom:26.50.0".exclude(("foo", "thing"))
      )
    }
  }
}

object parent extends JavaModule with TestPublishModule {
  def parentDep = Some(ivy"org.apache.spark:spark-parent_2.13:3.5.3")
  def ivyDeps = Agg(
    ivy"org.apache.commons:commons-compress:_"
  )

  object dependee extends JavaModule with TestPublishModule {
    def moduleDeps = Seq(
      parent
    )
  }

  object scala extends ScalaModule with TestPublishModule {
    def scalaVersion = _root_.scala.util.Properties.versionNumberString
    def parentDep = Some(ivy"org.apache.spark::spark-parent:3.5.3")
    def ivyDeps = Agg(
      ivy"org.apache.commons:commons-compress:_"
    )
  }

  object invalid extends Module {
    object exclude extends JavaModule {
      def parentDep = Some(
        ivy"org.apache.spark:spark-parent_2.13:3.5.3".exclude(("foo", "thing"))
      )
    }
  }
}

object depMgmt extends JavaModule with TestPublishModule {
  def ivyDeps = Agg(
    ivy"com.thesamet.scalapb:scalapbc_2.13:0.9.8"
  )
  def dependencyManagement = Agg(
    ivy"com.google.protobuf:protobuf-java:4.28.3"
  )

  object transitive extends JavaModule with TestPublishModule {
    def moduleDeps = Seq(depMgmt)
  }

  object extraExclude extends JavaModule with TestPublishModule {
    def ivyDeps = Agg(
      ivy"com.lihaoyi:cask_2.13:0.9.4"
    )
    def dependencyManagement = Agg(
      // The exclude should be automatically added to the dependency above
      // thanks to dependency management, but the version should be left
      // untouched
      ivy"com.lihaoyi:cask_2.13:0.9.3"
        .exclude(("org.slf4j", "slf4j-api"))
    )

    object transitive extends JavaModule with TestPublishModule {
      def moduleDeps = Seq(extraExclude)
    }
  }

  object exclude extends JavaModule with TestPublishModule {
    def ivyDeps = Agg(
      ivy"com.lihaoyi:cask_2.13:0.9.4"
    )
    def dependencyManagement = Agg(
      ivy"org.java-websocket:Java-WebSocket:1.5.2"
        .exclude(("org.slf4j", "slf4j-api"))
    )

    object transitive extends JavaModule with TestPublishModule {
      def moduleDeps = Seq(exclude)
    }
  }

  object onlyExclude extends JavaModule with TestPublishModule {
    def ivyDeps = Agg(
      ivy"com.lihaoyi:cask_2.13:0.9.4"
    )
    def dependencyManagement = Agg(
      ivy"org.java-websocket:Java-WebSocket:_"
        .exclude(("org.slf4j", "slf4j-api"))
    )

    object transitive extends JavaModule with TestPublishModule {
      def moduleDeps = Seq(onlyExclude)
    }
  }

  object invalid extends Module {
    object transitive extends JavaModule {
      def dependencyManagement = {
        val dep = ivy"org.java-websocket:Java-WebSocket:1.5.3"
        Agg(
          dep.copy(
            dep = dep.dep.withTransitive(false)
          )
        )
      }
    }
  }

  object placeholder extends JavaModule with TestPublishModule {
    def ivyDeps = Agg(
      ivy"com.google.protobuf:protobuf-java:_"
    )
    def dependencyManagement = Agg(
      ivy"com.google.protobuf:protobuf-java:4.28.3"
    )

    object transitive extends JavaModule with TestPublishModule {
      def moduleDeps = Seq(placeholder)
    }
  }
}
