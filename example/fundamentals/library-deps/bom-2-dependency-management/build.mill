// Pass dependencies to `dependencyManagement` in a `JavaModule` / `ScalaModule` / `KotlinModule`, like

//// SNIPPET:BUILD1
package build
import mill._, javalib._

object dependencyManagement extends JavaModule {
  def dependencyManagement = Agg(
    ivy"com.google.protobuf:protobuf-java:4.28.3",
    ivy"io.grpc:grpc-protobuf:1.67.1"
  )
  def ivyDeps = Agg(
    ivy"io.grpc:grpc-protobuf"
  )
}

// The version of grpc-protobuf (`io.grpc:grpc-protobuf`) isn't written down here, so the version
// found in `dependencyManagement`, `1.67.1` is used.
//
// Also, by default, grpc-protobuf `1.67.1` pulls version `3.25.3` of protobuf-java (`com.google.protobuf:protobuf-java`) .
// But `dependencyManagement` specifies another version for that dependency, `4.28.3`, so
// protobuf-java `4.28.3` ends up being pulled here.

// One can also add exclusions via dependency management, like

object dependencyManagementWithVersionAndExclusions extends JavaModule {
  def dependencyManagement = Agg(
    ivy"io.grpc:grpc-protobuf:1.67.1"
      .exclude(("com.google.protobuf", "protobuf-java"))
  )
  def ivyDeps = Agg(
    ivy"io.grpc:grpc-protobuf"
  )
}

// Here, grpc-protobuf has an empty version in `ivyDeps`, so the one in `dependencyManagement`,
// `1.67.1`, is used. Also, `com.google.protobuf:protobuf-java` is excluded from grpc-protobuf
// in `dependencyManagement`, so it ends up being excluded from it in `ivyDeps` too.

// If one wants to add exclusions via `dependencyManagement`, specifying a version is optional,
// like

object dependencyManagementWithExclusions extends JavaModule {
  def dependencyManagement = Agg(
    ivy"io.grpc:grpc-protobuf"
      .exclude(("com.google.protobuf", "protobuf-java"))
  )
  def ivyDeps = Agg(
    ivy"io.grpc:grpc-protobuf:1.67.1"
  )
}

// Here, given that grpc-protobuf is fetched during dependency resolution,
// `com.google.protobuf:protobuf-java` is excluded from it because of the dependency management.
