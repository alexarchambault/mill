// Mill supports for Bill of Materials ("BOM") or dependency management.
// These allow to centralize versions and exclusions for your dependencies,
// either in you Mill project, via dependency management, or externally,
// via a BOM.

// To add a BOM to a Java module, use `bomDeps`:

//// SNIPPET:BUILD1
package build
import mill._, javalib._

object bom extends JavaModule {
  def bomDeps = Agg(
    ivy"com.google.cloud:libraries-bom:26.50.0"
  )
  def ivyDeps = Agg(
    ivy"io.grpc:grpc-protobuf"
  )
}

// Versions found in a BOM are used in two ways:

// * to fill missing versions in the `ivyDeps` section

// * to override versions in transitive dependencies

// The version of grpc-protobuf isn't written down here, so the version
// from the `com.google.cloud:libraries-bom:26.50.0` BOM, `1.67.1` is used.
//
// Also, by default, `io.grpc:grpc-protobuf:1.67.1` pulls `com.google.protobuf:protobuf-java:3.25.3`.
// But the BOM specifies another version for that dependency, `4.28.3`, so
// `com.google.protobuf:protobuf-java:4.28.3` ends up being pulled here.

// Instead of pulling an external BOM, one can use `dependencyManagement` to specify dependency versions.
// Like with a BOM, versions in `dependencyManagement` are used to:

// * fill missing versions in the `ivyDeps` section

// * override versions in transitive dependencies

//// SNIPPET:BUILD2

object dependencyManagement extends JavaModule {
  def dependencyManagement = Agg(
    ivy"com.google.protobuf:protobuf-java:4.28.3",
    ivy"io.grpc:grpc-protobuf:1.67.1"
  )
  def ivyDeps = Agg(
    ivy"io.grpc:grpc-protobuf"
  )
}

//// SNIPPET:SCALASTEWARD

// Here, `io.grpc:grpc-protobuf` has no version in `ivyDeps`, so the version in
// `dependencyManagement`, `1.67.1` is used. Also, `io.grpc:grpc-protobuf:1.67.1`
// pulls `com.google.protobuf:protobuf-java:3.25.3` by default, but version
// `4.28.3` will be pulled, because of `com.google.protobuf:protobuf-java:4.28.3`
// in `dependencyManagement`.
